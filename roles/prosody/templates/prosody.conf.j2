-- Admins Example: admins = { "user1@example.com", "user2@example.net" }
admins = { }

-- Enable use of libevent for better performance under high load
-- For more information see: http://prosody.im/doc/libevent
--use_libevent = true;

-- Modules
modules_enabled = {

    -- Generally required
        "roster"; -- Allow users to have a roster. Recommended ;)
        "saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
        "tls"; -- Add support for secure TLS on c2s/s2s connections
        "dialback"; -- s2s dialback support
        "disco"; -- Service discovery

    -- Not essential, but recommended
        "private"; -- Private XML storage (for room bookmarks, etc.)
        "vcard"; -- Allow users to set vCards
        --"privacy"; -- Support privacy lists
        --"compression"; -- Stream compression (Debian: requires lua-zlib module to work)

    -- Nice to have
        "legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
        "version"; -- Replies to server version requests
        "uptime"; -- Report how long server has been running
        "time"; -- Let others know the time here on this server
        "ping"; -- Replies to XMPP pings with pongs
        "pep"; -- Enables users to publish their mood, activity, playing music and more
        "register"; -- Allow users to register on this server using a client and change passwords
        "adhoc"; -- Support for "ad-hoc commands" that can be executed with an XMPP client

    -- Admin interfaces
        "admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
        --"admin_telnet"; -- Opens telnet console interface on localhost port 5582

    -- Other specific functionality
        --"bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
        --"httpserver"; -- Serve static files from a directory over HTTP
        --"groups"; -- Shared roster support
        --"announce"; -- Send announcement to all online users
        --"welcome"; -- Welcome users who register accounts
        --"watchregistrations"; -- Alert admins of registrations
        --"motd"; -- Send a message to users when they log in
    -- Debian: do not remove this module, or you lose syslog
    -- support
        "posix"; -- POSIX functionality, sends server to background, enables syslog, etc.

    -- Other
        "carbons";
};

-- These modules are auto-loaded, should you
-- (for some mad reason) want to disable
-- them then uncomment them below
modules_disabled = {
    -- "presence"; -- Route user/contact status information
    -- "message"; -- Route messages
    -- "iq"; -- Route info queries
    -- "offline"; -- Store offline messages
};

-- Disable account creation by default, for security
-- For more information see http://prosody.im/doc/creating_accounts
allow_registration = false;

-- Debian:
--   send the server to background.
--
daemonize = true;

-- Debian:
--   Please, don't change this option since /var/run/prosody/
--   is one of the few directories Prosody is allowed to write to
--
pidfile = "/var/run/prosody/prosody.pid";

ssl = {
    key = "/etc/ssl/private/onemail.me.key";
    certificate = "/etc/ssl/private/onemail.me.crt";
}

c2s_require_encryption = true
s2s_require_encryption = true

-- Auth
authentication = "dovecot"
dovecot_auth_socket = "/var/spool/prosody/private/auth"
auth_append_host = true

-- Storage (requires lua-dbi-mysql package(
storage = "sql"
sql = { driver = "MySQL", database = "{{ xmpp_db_name }}", username = "{{ xmpp_db_username }}", password = "{{ xmpp_db_password }}", host = "{{ xmpp_db_host }}" }

-- Logging
log = {
    -- Log files (change 'info' to 'debug' for debug logs):
    debug = "/var/log/prosody/prosody.log";
    error = "/var/log/prosody/prosody.err";
    -- Syslog:
    { levels = { "error" }; to = "syslog";  };
}

---Set up a MUC (multi-user chat) room server on conference.example.com:
Component "conference.{{  hostname_domain }}" "muc"

-- Set up a SOCKS5 bytestream proxy for server-proxied file transfers:
--Component "proxy.example.com" "proxy65"
    Component "proxy.{{  hostname_domain }}" "proxy65"
        proxy65_address = "{{  hostname_fqdn }}"

Include "conf.d/*.cfg.lua"
